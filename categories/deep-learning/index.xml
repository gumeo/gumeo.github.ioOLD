<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deep Learning on Gumeo&#39;s Blog</title>
    <link>https://gumeo.github.io/categories/deep-learning/</link>
    <description>Recent content in Deep Learning on Gumeo&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://gumeo.github.io/categories/deep-learning/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Part 2: Deep Learning with Closures in R</title>
      <link>https://gumeo.github.io/post/part-2-deep-learning-with-closures-in-r/</link>
      <pubDate>Thu, 21 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://gumeo.github.io/post/part-2-deep-learning-with-closures-in-r/</guid>
      <description>Letâ€™s go on! If you just arrived, you can check out the first part here. The goal of this series is to demonstrate how compactly we can implement an MLP in a functional programming paradigm and how easy it becomes to extend/play around with it. This post is aimed at the R person that wants to get into deep learning or anyone curious about how these things are implemented. Another goal is to visualize what is happening in a neural network during training in hope to get a deeper understanding of what is going on.</description>
    </item>
    
    <item>
      <title>Part 1: Deep Learning with Closures in R</title>
      <link>https://gumeo.github.io/post/part-1-deep-learning-with-closures-in-r/</link>
      <pubDate>Thu, 14 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://gumeo.github.io/post/part-1-deep-learning-with-closures-in-r/</guid>
      <description>Start of a small series The gif below is the evolution of the weights from a neural network trained on the mnist dataset. Mnist is a dataset of handwritten digits, and is kind of the hello world/FizzBuzz of machine learning. It is maybe not a very challenging data set, but you can learn a lot from it. This is a 10 by 10 grid of images, where each individual small patch represents weights going to a single neuron in the first hidden layer of the network.</description>
    </item>
    
  </channel>
</rss>